name: Update Helm Packages

on:
  pull_request_target:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "hemant-uniphi"
          git config --global user.email "hemant@e6x.io"

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Run commands
        run: |
          PR_NUMBER=$(echo "${{ github.event.pull_request.url }}" | awk -F'/' '{print $NF}')
          PR_TITLE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" | jq -r '.title')
          PR_BRANCH=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" | jq -r '.head.ref')
          PR_BASE_BRANCH=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" | jq -r '.base.ref')

          if [[ "${PR_BASE_BRANCH}" != "main" ]]; then
            echo "Skipping as the PR is not merged into the main branch"
            exit 0
          fi

          cd "$(git rev-parse --show-toplevel)"
          cd charts/workspace
          CURRENT_VERSION=$(find . -name "workspace-*.tgz" | sed -E 's/.*workspace-(.*).tgz/\1/')
          VERSION_NUMBER_ARRAY=(${CURRENT_VERSION//./ })
          MAJOR=${VERSION_NUMBER_ARRAY[0]}
          MINOR=${VERSION_NUMBER_ARRAY[1]}
          PATCH=${VERSION_NUMBER_ARRAY[2]}

          if [[ "$PR_TITLE" == *"[Major]"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$PR_TITLE" == *"[Minor]"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          helm package .
          rm -rf "workspace-${CURRENT_VERSION}.tgz"
          mv e6data-operator-0.1.0.tgz "workspace-${NEW_VERSION}.tgz"
          sed -i "s/version: .*/version: ${NEW_VERSION}/" chart.yaml

          cd "$(git rev-parse --show-toplevel)"
          cd charts/operator
          CURRENT_VERSION=$(find . -name "operator-*.tgz" | sed -E 's/.*operator-(.*).tgz/\1/')
          VERSION_NUMBER_ARRAY=(${CURRENT_VERSION//./ })
          MAJOR=${VERSION_NUMBER_ARRAY[0]}
          MINOR=${VERSION_NUMBER_ARRAY[1]}
          PATCH=${VERSION_NUMBER_ARRAY[2]}

          if [[ "$PR_TITLE" == *"[Major]"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$PR_TITLE" == *"[Minor]"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          helm package .
          rm -rf "operator-${CURRENT_VERSION}.tgz"
          mv e6data-operator-0.1.0.tgz "operator-${NEW_VERSION}.tgz"
          sed -i "s/version: .*/version: ${NEW_VERSION}/" chart.yaml

          cd "$(git rev-parse --show-toplevel)"
          git add .
          git commit -m "Updating packages for Helm"
